{"version":3,"file":"mnx-hypsometric.js","mappings":"mBA0EAA,QAAQC,IAAI,S","sources":["webpack://itowns-demo-geotiff/./src/entries/mnx-hypsometric.ts"],"sourcesContent":["\"use strict\";\n// import * as itowns from 'itowns';\n// import WMSCapabilities from 'wms-capabilities';\n// import Fetcher from './Fetcher';\n// import GeotiffParser from './GeotiffParser';\n//\n//\n// // SIS data\n// const data = {\n// \tcoord: new itowns.Coordinates('EPSG:4326', -1.08, 13.082),\n// \tsource: {\n// \t\tcrs: 'EPSG:4326',\n// \t\textent: new itowns.Extent('EPSG:4326', -2.57046, 2.80335, 0.3839, 15.0937),\n// \t\tname: 'toto:W002N13_4EGTFLT32_MTNE1_001',\n// \t\turl: 'http://localhost:8080/geoserver/toto/wms',\n// \t\tversion: '1.3.0',\n// \t\t//noDataValue: -32.767,\n// \t},\n// };\n//\n// // Lidar HD data\n// // const data = {\n// //     coord: new itowns.Coordinates('EPSG:4326', -0.926061837, 45.988156177),\n// //     source: {\n// //         extent: new itowns.Extent('EPSG:4326', -1.57046, 2.80335, 45.3839, 51.0937),\n// //         name: 'IGNF_LIDAR-HD_MNS',\n// //         url: 'https://data.geopf.fr/wms-r',\n// //         version: '1.3.0',\n// //     },\n// //     noDataValue: -999999,\n// // };\n//\n//\n//\n// // ---------- CREATE THE VIEW : ----------\n// \n// const placement = { coord: data.coord, range: 20000 };\n// const viewerDiv = document.getElementById('view-container');\n// const view = new itowns.GlobeView(viewerDiv, placement);\n// \n// \n// // ---------- DISPLAY A MAP ON THE VIEW : ----------\n// \n// function addMap() {\n// \titowns.Fetcher.json('./resources/layers/OPENSM.json').then(function _(config) {\n// \t\tconfig.source = new itowns.TMSSource(config.source);\n// \t\tview.addLayer(\n// \t\t\tnew itowns.ColorLayer('Map', config),\n// \t\t);\n// \t});\n// }\n// \n// \n// // ---------- DISPLAY TIFF : ----------\n// \n// function addGeotiff() {\n// \tconst tifSource = new itowns.WMSSource({\n// \t\t...data.source,\n// \t\tcrs: 'EPSG:4326',\n// \t\tfetcher: Fetcher.geotiff,\n// \t\tparser: GeotiffParser.parse,\n// \t\tformat: 'image/geotiff',  // TODO: this should not be needed. iTowns needs fixing...\n// \t});\n// \n// \tconst tifLayer = new itowns.ElevationLayer('tiff', {\n// \t\tsource: tifSource,\n// \t});\n// \tview.addLayer(tifLayer);\n// }\n// \n// addMap();\n// addGeotiff();\n// \nObject.defineProperty(exports, \"__esModule\", { value: true });\nconsole.log('coucou');\n"],"names":["console","log"],"sourceRoot":""}